springdoc.pathsToMatch: /task/**, /pipeline/**, /pipeline-task/**
spring.main.allow-bean-definition-overriding: true
app.version: ${APP_VERSION:"development"}
app.last_updated: ${APP_LAST_UPDATED:"2020-02-05 21:47:00"}
server:
  use-forward-headers: true
  port: ${SPRING_SERVER_PORT:8085}
  servlet:
    context-path: /api
security:
  facebookSignInCallbackUrl: ${FACEBOOK_SIGNIN_CALLBACK_URL:http://localhost:8080/#/enter/}
  googleSignInCallbackUrl: ${GOOGLE_SIGNIN_CALLBACK_URL:http://localhost:8080/#/enter/}
elasticsearch:
  host: ${ES_HOST_NAME:k8s}
  httpPort: ${ES_HTTP_PORT:32714}
  enabled: ${ES_ENABLED:false}
spring:
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_CLIENT_ID:996609081064-lgqc18ir273nq6e7g5gn2n5n0g1d90co.apps.googleusercontent.com}
            clientSecret: ${GOOGLE_CLIENT_SECRET:qu83RghnUFOSdUeYnNRCk03p}
            scope:
              - openid
              - email
              - profile
          facebook:
            client-id: 2803098933042498
            client-secret: 08c7bcc15ca67e2449b9880bf3a262a9
            scope:
              - email
              - public_profile
#  redis:
#    host: ${REDIS_HOST:k8s}
#    password:
#    port: ${REDIS_PORT:6379}
  session:
    store-type: NONE
#  elasticsearch:
#    rest:
#      uris: ${ES_HOST_NAME:localhost}:${ES_HTTP_PORT:9200}
  data:
    mongodb:
      database: ${MONGODB_DB:scraper-service}
      host: ${MONGODB_HOST:k8s}
      port: ${MONGODB_PORT:32619}
      username: ${MONGODB_USER:guest}
      password: ${MONGODB_PASSWORD:guest}
      authentication-database: ${MONGODB_AUTH_DB:admin}
  rabbitmq:
    host: ${RABBITMQ_HOST:k8s}
    port: ${RABBITMQ_PORT:30403}
    username: ${RABBITMQ_USER:user}
    password: ${RABBITMQ_PASSWORD:password}
    exchange:
      runTask: ${RABBITMQ_RUN_TASK_EXCHANGE_NAME:DEV_RUN_TASK}
      inboxFanout: ${RABBITMQ_INBOX_FANOUT_EXCHANGE_NAME:DEV_INBOX_FANOUT}
    queue:
      runHooks: ${RABBITMQ_QUEUE_RUN_HOOKS:DEV_RUN_HOOKS}
    routing:
      taskRun: ${RABBITMQ_RUN_TASK_ROUTING_KEY:DEV_RUN_TASK}
      runHooks: ${RABBITMQ_ROUTING_TASK_RUN:DEV_RUN_HOOKS}
  resources:
    chain:
      strategy:
        content:
          enabled: true
minio:
  url: ${MINIO_URL:https://storage.elasticdata.io}
  publicUrl: ${MINIO_PUBLIC_URL:https://storage.elasticdata.io}
  accessKey: ${MINIO_ACCESS_KEY:elasticdataio}
  secretKey: ${MINIO_SECRET_KEY:wJalrXUtnFEMI/9874c97c907209cpuvpw97bpb/asdasdasdasdasd}
logging:
  level:
    ROOT: ${SPRING_LOG_LEVEL:INFO}
    org:
      springframework:
        security:
          oauth2: ${SPRING_LOG_LEVEL:INFO}
        data:
          mongodb:
            core:
              MongoTemplate: ${SPRING_LOG_LEVEL:ERROR}
jwt.secret: secret-key-jwt-123
management:
  health:
    elasticsearch:
      enabled: false
  endpoints:
    web:
      exposure:
        include: health,prometheus
proxy.static.url: ${PROXY_STATIC_URL:k8s:30220}
bot.telegram.enabled: ${BOT_TELEGRAM_ENABLED:false}